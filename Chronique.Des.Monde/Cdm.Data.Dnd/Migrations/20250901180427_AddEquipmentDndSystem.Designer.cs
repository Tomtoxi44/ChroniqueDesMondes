// <auto-generated />
using System;
using Cdm.Data.Dnd;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cdm.Data.Dnd.Migrations
{
    [DbContext(typeof(DndDbContext))]
    [Migration("20250901180427_AddEquipmentDndSystem")]
    partial class AddEquipmentDndSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cdm.Data.Models.ACharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChapterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<bool>("IsHostile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNpc")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemCharacter")
                        .HasColumnType("bit");

                    b.Property<int>("Leveling")
                        .HasColumnType("int");

                    b.Property<int>("Life")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("UserId");

                    b.ToTable("ACharacter");

                    b.HasDiscriminator().HasValue("ACharacter");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cdm.Data.Models.AEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_Equipment_Category");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("IX_Equipment_CreatedByUserId");

                    b.HasIndex("GameType")
                        .HasDatabaseName("IX_Equipment_GameType");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Equipment_Name");

                    b.HasIndex("Category", "GameType")
                        .HasDatabaseName("IX_Equipment_Category_GameType");

                    b.HasIndex("GameType", "IsPublic", "IsActive")
                        .HasDatabaseName("IX_Equipment_GameType_IsPublic_IsActive");

                    b.ToTable("Equipment", (string)null);

                    b.HasDiscriminator().HasValue("AEquipment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cdm.Data.Models.ASpell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPublic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Tags")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId")
                        .HasDatabaseName("IX_Spells_CreatedByUserId");

                    b.HasIndex("GameType")
                        .HasDatabaseName("IX_Spells_GameType");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Spells_Name");

                    b.HasIndex("GameType", "IsPublic", "IsActive")
                        .HasDatabaseName("IX_Spells_GameType_IsPublic_IsActive");

                    b.ToTable("Spells", (string)null);

                    b.HasDiscriminator().HasValue("ASpell");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Cdm.Data.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Settings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Cdm.Data.Models.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("Cdm.Data.Models.ContentBlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NpcMood")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("ContentBlocks");
                });

            modelBuilder.Entity("Cdm.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cdm.Data.Dnd.Models.CharacterDnd", b =>
                {
                    b.HasBaseType("Cdm.Data.Models.ACharacter");

                    b.Property<int>("AdditionalCharism")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalConstitution")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalDexterity")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalIntelligence")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalStrong")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalWisdoms")
                        .HasColumnType("int");

                    b.Property<int>("Charism")
                        .HasColumnType("int");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClassArmor")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Strong")
                        .HasColumnType("int");

                    b.Property<int>("Wisdoms")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CharacterDnd");
                });

            modelBuilder.Entity("Cdm.Data.Dnd.Models.EquipmentDnd", b =>
                {
                    b.HasBaseType("Cdm.Data.Models.AEquipment");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("AttackBonus")
                        .HasColumnType("int");

                    b.Property<int?>("Charges")
                        .HasColumnType("int");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DamageType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Effect")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsArmor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConsumable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMagical")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShield")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWeapon")
                        .HasColumnType("bit");

                    b.Property<string>("MagicalProperties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxDexBonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(-1);

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Common");

                    b.Property<bool>("RequiresAttunement")
                        .HasColumnType("bit");

                    b.Property<bool>("StealthDisadvantage")
                        .HasColumnType("bit");

                    b.Property<int>("StrengthRequirement")
                        .HasColumnType("int");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("ArmorClass")
                        .HasDatabaseName("IX_Equipment_ArmorClass");

                    b.HasIndex("AttackBonus")
                        .HasDatabaseName("IX_Equipment_AttackBonus");

                    b.HasIndex("DamageType")
                        .HasDatabaseName("IX_Equipment_DamageType");

                    b.HasIndex("Rarity")
                        .HasDatabaseName("IX_Equipment_Rarity");

                    b.HasIndex("WeaponType")
                        .HasDatabaseName("IX_Equipment_WeaponType");

                    b.HasIndex("IsWeapon", "IsArmor")
                        .HasDatabaseName("IX_Equipment_Type_Flags");

                    b.HasDiscriminator().HasValue("EquipmentDnd");
                });

            modelBuilder.Entity("Cdm.Data.Dnd.Models.SpellDnd", b =>
                {
                    b.HasBaseType("Cdm.Data.Models.ASpell");

                    b.Property<string>("AttackRoll")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CastingTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Components")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Damage")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("HigherLevelDamage")
                        .HasColumnType("int");

                    b.Property<bool>("IsRitual")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("MaterialComponent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Range")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RequiresConcentration")
                        .HasColumnType("bit");

                    b.Property<string>("SavingThrow")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasIndex("Level")
                        .HasDatabaseName("IX_Spells_Level");

                    b.HasIndex("School")
                        .HasDatabaseName("IX_Spells_School");

                    b.HasIndex("Level", "School")
                        .HasDatabaseName("IX_Spells_Level_School");

                    b.HasDiscriminator().HasValue("SpellDnd");
                });

            modelBuilder.Entity("Cdm.Data.Models.ACharacter", b =>
                {
                    b.HasOne("Cdm.Data.Models.Chapter", "Chapter")
                        .WithMany("Characters")
                        .HasForeignKey("ChapterId");

                    b.HasOne("Cdm.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Cdm.Data.Models.AEquipment", b =>
                {
                    b.HasOne("Cdm.Data.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Cdm.Data.Models.ASpell", b =>
                {
                    b.HasOne("Cdm.Data.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Cdm.Data.Models.Campaign", b =>
                {
                    b.HasOne("Cdm.Data.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Cdm.Data.Models.Chapter", b =>
                {
                    b.HasOne("Cdm.Data.Models.Campaign", "Campaign")
                        .WithMany("Chapters")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Cdm.Data.Models.ContentBlock", b =>
                {
                    b.HasOne("Cdm.Data.Models.Chapter", "Chapter")
                        .WithMany("ContentBlocks")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cdm.Data.Models.ACharacter", "Character")
                        .WithMany("ContentBlocks")
                        .HasForeignKey("CharacterId");

                    b.Navigation("Chapter");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Cdm.Data.Models.ACharacter", b =>
                {
                    b.Navigation("ContentBlocks");
                });

            modelBuilder.Entity("Cdm.Data.Models.Campaign", b =>
                {
                    b.Navigation("Chapters");
                });

            modelBuilder.Entity("Cdm.Data.Models.Chapter", b =>
                {
                    b.Navigation("Characters");

                    b.Navigation("ContentBlocks");
                });
#pragma warning restore 612, 618
        }
    }
}
